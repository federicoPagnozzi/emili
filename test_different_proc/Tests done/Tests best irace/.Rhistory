if (!require("data.table")) install.packages("data.table")
main.dir <- '/home/antoniofisk/Desktop/Uni/MasterThesis/Project/Tests done'
setwd(main.dir)
dir.tests <- list.dirs('.', recursive=FALSE)
par(mfrow=c(1,2))
feasibleSolutionCount <- NULL
Xist <- list(NULL)
Yist <- list(NULL)
Y <- Reduce(fun <- function(y1, y2) {
y1[[length(y1)+1]] <- y2
return(y1)
}, unlist(lapply(files, read.csv, head=TRUE, sep=" ")))
dir.tests
dir <- dir.tests[[1]]
#  i <-8
setwd(file.path(main.dir, dir))
files <- list.files(path = ".", pattern = "raw", all.files = FALSE,
full.names = FALSE, recursive = FALSE,
ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
Y <- Reduce(fun <- function(y1, y2) {
y1[[length(y1)+1]] <- y2
return(y1)
}, unlist(lapply(files, read.csv, head=TRUE, sep=" ")))
Y <- Reduce(fun <- function(y1, y2) {
y1[[length(y1)+1]] <- y2
return(y1)
}, lapply(files, read.csv, head=TRUE, sep=" "))
Y <- list(NUll)
Y <- lapply(files, read.csv, head=TRUE, sep=" ")
length(Y)
Y <- Reduce(fun <- function(y1, y2) {
y1[[length(y1)+1]] <- y2
return(y1)
}, Y)
if (!require("data.table")) install.packages("data.table")
main.dir <- '/home/antoniofisk/Desktop/Uni/MasterThesis/Project/Tests done'
setwd(main.dir)
dir.tests <- list.dirs('.', recursive=FALSE)
par(mfrow=c(1,2))
feasibleSolutionCount <- NULL
Xist <- list(NULL)
Yist <- list(NULL)
Y.tests <- list(NULL)
for (dir in dir.tests){
#  i <-8
setwd(file.path(main.dir, dir))
files <- list.files(path = ".", pattern = "raw", all.files = FALSE,
full.names = FALSE, recursive = FALSE,
ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
Y <- list(NUll)
Y <- lapply(files, read.csv, head=TRUE, sep=" ")
#   Y <- Reduce(fun <- function(y1, y2) {
#     y1[[length(y1)+1]] <- y2
#     return(y1)
#     }, Y)
Y.tests[[length(Y.tests) + 1]] <- Y
}
if (!require("data.table")) install.packages("data.table")
main.dir <- '/home/antoniofisk/Desktop/Uni/MasterThesis/Project/Tests done'
setwd(main.dir)
dir.tests <- list.dirs('.', recursive=FALSE)
par(mfrow=c(1,2))
feasibleSolutionCount <- NULL
Xist <- list(NULL)
Yist <- list(NULL)
Y.tests <- list(NULL)
for (dir in dir.tests){
#  i <-8
setwd(file.path(main.dir, dir))
files <- list.files(path = ".", pattern = "raw", all.files = FALSE,
full.names = FALSE, recursive = FALSE,
ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
Y <- list(NULL)
Y <- lapply(files, read.csv, head=TRUE, sep=" ")
#   Y <- Reduce(fun <- function(y1, y2) {
#     y1[[length(y1)+1]] <- y2
#     return(y1)
#     }, Y)
Y.tests[[length(Y.tests) + 1]] <- Y
}
length(Y.tests)
if (!require("data.table")) install.packages("data.table")
main.dir <- '/home/antoniofisk/Desktop/Uni/MasterThesis/Project/Tests done'
setwd(main.dir)
dir.tests <- list.dirs('.', recursive=FALSE)
par(mfrow=c(1,2))
feasibleSolutionCount <- NULL
Xist <- list(NULL)
Yist <- list(NULL)
Y.tests <- list(NULL)
length(Y.tests)
if (!require("data.table")) install.packages("data.table")
main.dir <- '/home/antoniofisk/Desktop/Uni/MasterThesis/Project/Tests done'
setwd(main.dir)
dir.tests <- list.dirs('.', recursive=FALSE)
par(mfrow=c(1,2))
feasibleSolutionCount <- NULL
Xist <- list(NULL)
Yist <- list(NULL)
Y.tests <- list(NULL)
for (dir in dir.tests){
#  i <-8
setwd(file.path(main.dir, dir))
files <- list.files(path = ".", pattern = "raw", all.files = FALSE,
full.names = FALSE, recursive = FALSE,
ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
Y <- list(NULL)
Y <- lapply(files, read.csv, head=TRUE, sep=" ")
#   Y <- Reduce(fun <- function(y1, y2) {
#     y1[[length(y1)+1]] <- y2
#     return(y1)
#     }, Y)
Y.tests[[length(Y.tests)]] <- Y
}
length(Y.tests)
length(Y.tests)
dir
if (!require("data.table")) install.packages("data.table")
main.dir <- '/home/antoniofisk/Desktop/Uni/MasterThesis/Project/Tests done'
setwd(main.dir)
dir.tests <- list.dirs('.', recursive=FALSE)
dir.tests
if (!require("data.table")) install.packages("data.table")
main.dir <- '/home/antoniofisk/Desktop/Uni/MasterThesis/Project/Tests done'
setwd(main.dir)
dir.tests <- list.dirs('.', recursive=FALSE)
par(mfrow=c(1,2))
feasibleSolutionCount <- NULL
Xist <- list(NULL)
Yist <- list(NULL)
Y.tests <- list(NULL)
for (dir in dir.tests){
#  i <-8
setwd(file.path(main.dir, dir))
files <- list.files(path = ".", pattern = "raw", all.files = FALSE,
full.names = FALSE, recursive = FALSE,
ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
Y <- list(NULL)
Y <- lapply(files, read.csv, head=TRUE, sep=" ")
#   Y <- Reduce(fun <- function(y1, y2) {
#     y1[[length(y1)+1]] <- y2
#     return(y1)
#     }, Y)
Y.tests[[length(Y.tests)]] <- Y
}
length(Y.tests)
dir.tests
if (!require("data.table")) install.packages("data.table")
main.dir <- '/home/antoniofisk/Desktop/Uni/MasterThesis/Project/Tests done'
setwd(main.dir)
dir.tests <- list.dirs('.', recursive=FALSE)
par(mfrow=c(1,2))
feasibleSolutionCount <- NULL
Xist <- list(NULL)
Yist <- list(NULL)
Y.tests <- list(NULL)
dir <- dir.tests[[1]]
dir
setwd(file.path(main.dir, dir))
files <- list.files(path = ".", pattern = "raw", all.files = FALSE,
full.names = FALSE, recursive = FALSE,
ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
Y <- list(NULL)
Y <- lapply(files, read.csv, head=TRUE, sep=" ")
#   Y <- Reduce(fun <- function(y1, y2) {
#     y1[[length(y1)+1]] <- y2
#     return(y1)
#     }, Y)
Y.tests[[length(Y.tests)]] <- Y
length(Y.tests)
if (!require("data.table")) install.packages("data.table")
main.dir <- '/home/antoniofisk/Desktop/Uni/MasterThesis/Project/Tests done'
setwd(main.dir)
dir.tests <- list.dirs('.', recursive=FALSE)
par(mfrow=c(1,2))
feasibleSolutionCount <- NULL
Xist <- list(NULL)
Yist <- list(NULL)
Y.tests <- list(NULL)
for (dir in dir.tests){
#  i <-8
setwd(file.path(main.dir, dir))
files <- list.files(path = ".", pattern = "raw", all.files = FALSE,
full.names = FALSE, recursive = FALSE,
ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
Y <- list(NULL)
Y <- lapply(files, read.csv, head=TRUE, sep=" ")
#   Y <- Reduce(fun <- function(y1, y2) {
#     y1[[length(y1)+1]] <- y2
#     return(y1)
#     }, Y)
Y.tests[[length(Y.tests)+1]] <- Y
}
length(Y.tests)
length(Y.tests[[1]])
length(Y.tests[[2]])
length(Y.tests[[3]])
length(Y.tests)
Y.tests <- Y.tests[2:length(Y.tests)]
length(Y.tests)
if (!require("data.table")) install.packages("data.table")
main.dir <- '/home/antoniofisk/Desktop/Uni/MasterThesis/Project/Tests done'
setwd(main.dir)
dir.tests <- list.dirs('.', recursive=FALSE)
par(mfrow=c(1,2))
feasibleSolutionCount <- NULL
Xist <- list(NULL)
Yist <- list(NULL)
Y.tests <- list(NULL)
for (dir in dir.tests){
#  i <-8
setwd(file.path(main.dir, dir))
files <- list.files(path = ".", pattern = "raw", all.files = FALSE,
full.names = FALSE, recursive = FALSE,
ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
Y <- list(NULL)
Y <- lapply(files, read.csv, head=TRUE, sep=" ")
#   Y <- Reduce(fun <- function(y1, y2) {
#     y1[[length(y1)+1]] <- y2
#     return(y1)
#     }, Y)
Y.tests[[length(Y.tests)+1]] <- Y
}
Y.tests <- Y.tests[2:length(Y.tests)]
jpeg(filename)
if (!require("data.table")) install.packages("data.table")
main.dir <- '/home/antoniofisk/Desktop/Uni/MasterThesis/Project/Tests done'
setwd(main.dir)
dir.tests <- list.dirs('.', recursive=FALSE)
par(mfrow=c(1,2))
feasibleSolutionCount <- NULL
Xist <- list(NULL)
Yist <- list(NULL)
Y.tests <- list(NULL)
for (dir in dir.tests){
#  i <-8
setwd(file.path(main.dir, dir))
files <- list.files(path = ".", pattern = "raw", all.files = FALSE,
full.names = FALSE, recursive = FALSE,
ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
Y <- list(NULL)
Y <- lapply(files, read.csv, head=TRUE, sep=" ")
#   Y <- Reduce(fun <- function(y1, y2) {
#     y1[[length(y1)+1]] <- y2
#     return(y1)
#     }, Y)
Y.tests[[length(Y.tests)+1]] <- Y
}
Y.tests <- Y.tests[2:length(Y.tests)]
