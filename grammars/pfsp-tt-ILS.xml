<?xml version="1.0" encoding="UTF-8" ?>

<!--
     17/06/2015

     Grammar for PFSP Total Tardiness
     without time related termination and optimized for simple algorithms

     17/01/2017

     Grammar modified to allow only simple ILS algorithms
 -->

<gr:grammar xmlns:gr="grammar">
    <gr:derivations xmlns:pfsp="pfsp_automatic_generation">
		
	 <pfsp:iteration_number type="int" min="1" max="1000" stepIfEnumerated="1"/>
	 <pfsp:time type="real" min="0.1" max="1" stepIfEnumerated="0.01"/>
	 <pfsp:steps type="int" min="1" max="300" stepIfEnumerated="1"/>
	 <pfsp:sp_impact type="int" min="1" max="20" stepIfEnumerated="1"/>
	 <pfsp:s_acc_temp type="real" min="0.1" max="5" stepIfEnumerated="0.1"/>
	 <pfsp:ac_percentage type="int" min="1" max="100" stepIfEnumerated="1"/>
	 <pfsp:metrotemp type="real" min="0.1" max="30" stepIfEnumerated="1"/>
	 <pfsp:tabutenure_size type="int" min="1" max="20" stepIfEnumerated="1"/>
	 <pfsp:random_moves type="int" min="1" max="10" stepIfEnumerated="1"/>
	 <pfsp:start_temp type="real" min="1" max="5.0" stepIfEnumerated="0.1"/>
	 <pfsp:end_temp type="real" min="0" max="1.0" stepIfEnumerated="0.1"/>
       	 <pfsp:temp_ratio type="real" min="0.01" max="0.1" stepIfEnumerated="0.01"/>
       	 <pfsp:metro_alpha type="real" min="0.1" max="1" stepIfEnumeraterd="0.1"/>
	 <pfsp:tempiterations type="int" min="1" max="500" stepIfEnumerated="1"/>	

	
<pfsp:initial_solution>
   <!--<![CDATA[random ]]>
   <or/>-->
   <![CDATA[slack ]]>
   <!--<or/>
   <![CDATA[nwslack ]]>-->
   <or/>
   <![CDATA[nehedd ]]>
   <or/>
   <![CDATA[nrz ]]>
  <or/>
  <![CDATA[nrz2 ]]>
 <or/>
  <![CDATA[mneh ]]>
</pfsp:initial_solution>

<pfsp:termination>
   <![CDATA[locmin ]]>
<!--   <or/>
   <![CDATA[true ]]>-->
   <or/>
    <![CDATA[maxstep ]]><pfsp:steps/><![CDATA[ ]]>
   <!--<or/>
   <![CDATA[time ]]><pfsp:time/><![CDATA[ ]]>
   <or/>
   <![CDATA[iteration ]]><pfsp:iteration_number/><![CDATA[ ]]>
   -->  
</pfsp:termination>

<pfsp:neighborhood>
	   <![CDATA[exchange ]]>
	<or/>
	   <![CDATA[transpose ]]>
	<or/>
	   <![CDATA[nttinsert ]]>
	<or/>
	   <![CDATA[finsert ]]>
	<or/>
	   <![CDATA[binsert ]]>
	<or/>
	  <![CDATA[tinsert ]]>
	</pfsp:neighborhood>
	
	<pfsp:pertubation>
		<![CDATA[rndmv ]]><pfsp:neighborhood/><pfsp:random_moves/><![CDATA[ ]]>
	</pfsp:pertubation>

	<pfsp:acceptance>
		<![CDATA[soaacc ]]><pfsp:s_acc_temp/><![CDATA[ ]]>
		<or/>
		<![CDATA[improve ]]>
		<or/>
		<![CDATA[saacc ]]><pfsp:start_temp/><![CDATA[ ]]><pfsp:end_temp/><![CDATA[ ]]><pfsp:temp_ratio/><![CDATA[ ]]><pfsp:tempiterations/><![CDATA[ ]]><pfsp:metro_alpha/><![CDATA[ ]]>
	</pfsp:acceptance>	
	
	<pfsp:problem>
           <![CDATA[PFSP_MS ]]>
           <or/>
           <![CDATA[PFSP_TCT ]]>
           <or/>
           <![CDATA[PFSP_E ]]>
	</pfsp:problem>

	<pfsp:first>
           <![CDATA[tfirst ]]>
		  <pfsp:initial_solution/>
          	  <pfsp:termination/>
  		  <pfsp:neighborhood/>
	          <pfsp:problem/>
	</pfsp:first>

	<pfsp:best>
           <![CDATA[tbest ]]>
           <pfsp:initial_solution/>
           <pfsp:termination/>
	   <pfsp:neighborhood/>
	   <pfsp:problem/>
	</pfsp:best>
	
	<pfsp:ails>
		<![CDATA[ils ]]>
		<pfsp:ilsalgos/>
	        <![CDATA[true ]]>
		<pfsp:pertubation/>
		<pfsp:acceptance/>
	</pfsp:ails>
        
	<pfsp:ilsalgos>
		<pfsp:first/>
		<or/>
		<pfsp:best/>
	</pfsp:ilsalgos>
	
	<pfsp:algos>
	<!--	<pfsp:first/>
		<or/>
		<pfsp:best/>
		<or/>-->
		<pfsp:ails/>
	</pfsp:algos>

	<pfsp:main>
	        <!--<pfsp:gls/>
	        <or/>-->
		<pfsp:algos/>
	</pfsp:main>

        <pfsp:main_algorithm output="params">
	<!--	<![CDATA[
			#define GRAMMAR2CODE
		]]>
	-->
                <![CDATA[PFSP_T ]]>
        	<pfsp:main/>     
           <!--<![CDATA[
                /*emili::LocalSearch* ls = new emili::FirstImprovementSearch(*in, *te, *ne);
		clock_t time = clock();
		if(search_time == 0 )
			solution = ls->search();
		else
			solution = ls->timedSearch(search_time);
		*/
           ]]>-->
        </pfsp:main_algorithm>

    </gr:derivations>
</gr:grammar>
